[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = "default"
style = "semver"
strict = false

[tool.poetry]
name = "plugboard"
version = "0.0.0"
description = "Plugboard is an event driven modelling and orchestration framework for simulating complex processes with many interconnected components."
authors = [
    "Chris Knight <plugboard@csknight.uk>",
    "Toby Coleman <plugboard@tobycoleman.com>",
]

[tool.poetry.dependencies]
python = ">=3.12,<4.0"
adlfs = {version = "^2024.7.0", optional = true}
annotated-types = "^0.7.0"
fsspec = "^2024.9.0"
gcsfs = {version = "^2024.9.0.post1", optional = true}
moto = {extras = ["server"], version = "^5.0.16"}
mpire = {extras = ["dill"], version = "^2.10.2"}
msgspec = {extras = ["yaml"], version = "^0.18.6"}
pandas = ">=1.0,<3"
pyarrow = "^17.0.0"
pydantic = "^2.8.2"
pyzmq = "^26.2.0"
rich = "^13.9.2"
s3fs = {version = "^2024.9.0", optional = true}
sqlalchemy = {version = ">=2.0.0,<3", extras = ["asyncio"]}
typer = "^0.12.5"

[tool.poetry.extras]
aws = ["s3fs"]
azure = ["adlfs"]
gcp = ["gcsfs"]

[tool.poetry.group.dev.dependencies]
ipython = "^8.26.0"
jupyterlab = "^4.2.4"
mypy = "^1.11.2"
nbstripout = "^0.7.1"
poetry-dynamic-versioning = "^1.4.0"
poetry-plugin-export = "^1.8.0"
poetry-plugin-sort = "^0.2.1"
poetry-plugin-up = "^0.7.2"
pre-commit = "^3.8.0"
ruff = "^0.5.6"
types-aiofiles = "^24.1.0.20240626"

[tool.poetry.group.test.dependencies]
aiofile = "^3.9.0"
aiosqlite = "^0.20.0"
anyio = ">=4.3.0,<4.4.0"  # FIXME: Pinned due to hanging tests when running with anyio==4.4.0 on 2024-07-01
pytest = "^8.3.2"
pytest-asyncio = "^0.23.7"
pytest-cases = "^3.8.5"
pytest-env = "^1.1.3"
pytest-rerunfailures = "^14.0"
s3fs = "^2024.9.0"
time-machine = "^2.15.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mike = "^2.1.3"
mkdocs-material = "^9.5.32"
mkdocstrings = {extras = ["python"], version = "^0.25.2"}

[tool.poetry.scripts]
plugboard = "plugboard.cli:app"

[tool.pytest.ini_options]  # Orchestrates code testing
# Note: pytest toml key subject to change:
# https://docs.pytest.org/en/stable/reference/customize.html#pyproject-toml
env = []

[tool.mypy]  # Static type checking
exclude = [".git", "__pycache__", ".venv", "venv", "docs"]
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
plugins = "pydantic.mypy"

[tool.ruff]  # Code formatting and linting
line-length = 100
src = ["plugboard", "tests"]
extend-exclude = ["__pycache__"]
output-format = "grouped"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = ["D", "E", "F", "I", "W"]
ignore = ["D105", "D107", "D401", "E203", "E226", "E24", "E731", "E741", "F541", "F821", "W605"]
exclude = ["docs/*"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["plugboard"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
no-lines-before = ["local-folder"]
force-sort-within-sections = true
combine-as-imports = true
split-on-trailing-comma = true
relative-imports-order = "furthest-to-closest"
lines-after-imports = 2
