name: Build and publish a Docker image

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PYTHON_VERSION: '3.12'
  POETRY_VERSION: '1.8'

# See https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-docker-images
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{env.PYTHON_VERSION}}

      - name: Install
        run: |
          pip install poetry==$POETRY_VERSION

      - name: Export python requirements
        run: |
          poetry export -f requirements.txt -o requirements.txt --without-hashes

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Tagging documented at: https://github.com/docker/metadata-action?tab=readme-ov-file#basic
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            semver=${{ steps.meta.outputs.tags.semver }}
            git_hash_short=${{ steps.meta.outputs.tags.sha }}
            git_branch=${{ steps.meta.outputs.tags.ref }}
            build_date=$(date -u -Iseconds)

      # This can be enabled when the repo is public
      # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v1
      #   with:
      #     subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
      #     subject-digest: ${{ steps.push.outputs.digest }}
      #     push-to-registry: true

      - name: Delete untagged images
        uses: actions/delete-package-versions@v5
        with:
          package-name: 'plugboard'
          package-type: 'container'
          delete-only-untagged-versions: 'true'
