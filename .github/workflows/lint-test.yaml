name: Lint and test

on:
  push:
    branches:
      - 'main'
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened

env:
  PYTHON_VERSION: '3.12'
  POETRY_VERSION: '1.8'

jobs:
  pr-check:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR title
        uses: amannn/action-semantic-pull-request@v5
        if: github.event_name == 'pull_request_target'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          wip: true

  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: ${{env.PYTHON_VERSION}}

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install project
        run: uv sync --group test --group docs
      
      # Run all checks, even if some fail
      - name: Ruff linting
        run: uv run ruff check .
        if: always()

      - name: Ruff formatting
        run: uv run ruff format --check .
        if: always()

      - name: Type checking
        run: uv run mypy .
        if: always()

      - name: Tests
        run: uv run pytest .
        if: always()

      - name: Notebook output cleared
        run: find . -name '*.ipynb' -exec uv run nbstripout --verify {} +
        if: always()

      - name: Build docs
        run: uv run mkdocs build
        if: always()

      - name: Build package
        run: uv build
        if: always()

