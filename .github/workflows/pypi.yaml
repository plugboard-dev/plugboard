name: Publish Python package

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'

env:
  PYTHON_VERSION: '3.12'
  POETRY_VERSION: '1.8'
  # Enable when project is public
  PYPI_ENABLE: false

# See https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{env.PYTHON_VERSION}}

      - name: Install
        run: |
          pip install poetry==$POETRY_VERSION
          poetry self add poetry 
          poetry install --without dev
      
      - name: Build wheel
        run: poetry build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: startsWith(github.ref, 'refs/tags/') && (${{env.PYPI_ENABLE}} == true)  # only publish to PyPI on tag pushes
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/plugboard-dev
    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
          
      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        
  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v2.1.1
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl

      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # The release will have been created by cocogitto
        run: gh release upload '${{ github.ref_name }}' dist/**  --repo '${{ github.repository }}'
